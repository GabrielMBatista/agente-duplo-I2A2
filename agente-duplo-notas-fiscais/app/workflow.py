
from llm_selector import get_llm
from langchain.schema.messages import HumanMessage


def resumo_cabecalho(df):
    return {
        "total_notas": len(df),
        "valor_total": df["VALOR NOTA FISCAL"].sum(),
        "valor_m√©dio": df["VALOR NOTA FISCAL"].mean(),
        "valor_m√°ximo": df["VALOR NOTA FISCAL"].max(),
        "valor_m√≠nimo": df["VALOR NOTA FISCAL"].min(),
        "nota_maior_valor": df.loc[df["VALOR NOTA FISCAL"].idxmax()].to_dict(),
        "uf_emitente_mais_comum": df["UF EMITENTE"].mode()[0],
        "destino_mais_comum": df["DESTINO DA OPERA√á√ÉO"].mode()[0],
        "presen√ßa_comprador_mais_comum": df["PRESEN√áA DO COMPRADOR"].mode()[0],
        "total_emitentes_distintos": df["RAZ√ÉO SOCIAL EMITENTE"].nunique(),
        "destinat√°rio_mais_comum": df["NOME DESTINAT√ÅRIO"].mode()[0],
    }


def resumo_itens(df):
    return {
        "total_itens": len(df),
        "quantidade_total": df["QUANTIDADE"].sum(),
        "quantidade_m√©dia": df["QUANTIDADE"].mean(),
        "valor_unit√°rio_m√©dio": df["VALOR UNIT√ÅRIO"].mean(),
        "valor_total_geral": df["VALOR TOTAL"].sum(),
        "item_mais_comum": df["DESCRI√á√ÉO DO PRODUTO/SERVI√áO"].mode()[0],
        "item_maior_valor_unitario": df.loc[df["VALOR UNIT√ÅRIO"].idxmax()].to_dict(),
        "item_maior_valor_total": df.loc[df["VALOR TOTAL"].idxmax()].to_dict(),
        "tipo_produto_mais_comum": df["NCM/SH (TIPO DE PRODUTO)"].mode()[0],
        "unidade_mais_utilizada": df["UNIDADE"].mode()[0],
        "nota_com_mais_itens": df["CHAVE DE ACESSO"].value_counts().idxmax(),
    }


def responder_pergunta(pergunta, df_header, df_items, modelo, url, api_key):
    try:
        resumo_header = resumo_cabecalho(df_header)
        resumo_items = resumo_itens(df_items)

        prompt = f"""
Voc√™ √© um agente de IA especializado em an√°lise de dados p√∫blicos, com foco em notas fiscais brasileiras.

Sua tarefa √© responder perguntas com base nas informa√ß√µes abaixo. Os dados foram extra√≠dos de sistemas p√∫blicos e representam notas fiscais emitidas em janeiro de 2024.

---

üìä **Resumo: Cabe√ßalho das Notas Fiscais**
- Total de notas fiscais: {resumo_header['total_notas']}
- Valor total: R$ {resumo_header['valor_total']:,.2f}
- Valor m√©dio: R$ {resumo_header['valor_m√©dio']:,.2f}
- Valor m√°ximo: R$ {resumo_header['valor_m√°ximo']:,.2f}
- Valor m√≠nimo: R$ {resumo_header['valor_m√≠nimo']:,.2f}
- UF emitente mais comum: {resumo_header['uf_emitente_mais_comum']}
- Destino mais comum: {resumo_header['destino_mais_comum']}
- Presen√ßa do comprador mais comum: {resumo_header['presen√ßa_comprador_mais_comum']}
- Total de emitentes distintos: {resumo_header['total_emitentes_distintos']}
- Destinat√°rio mais comum: {resumo_header['destinat√°rio_mais_comum']}

üìÑ **Nota com maior valor:**
{resumo_header['nota_maior_valor']}

---

üì¶ **Resumo: Itens das Notas Fiscais**
- Total de itens: {resumo_items['total_itens']}
- Quantidade total: {resumo_items['quantidade_total']}
- Quantidade m√©dia por item: {resumo_items['quantidade_m√©dia']:.2f}
- Valor unit√°rio m√©dio: R$ {resumo_items['valor_unit√°rio_m√©dio']:,.2f}
- Valor total geral: R$ {resumo_items['valor_total_geral']:,.2f}
- Item mais comum: {resumo_items['item_mais_comum']}
- Tipo de produto mais comum (NCM): {resumo_items['tipo_produto_mais_comum']}
- Unidade mais utilizada: {resumo_items['unidade_mais_utilizada']}
- Nota com maior n√∫mero de itens: {resumo_items['nota_com_mais_itens']}

üìÑ **Item com maior valor unit√°rio:**
{resumo_items['item_maior_valor_unitario']}

üìÑ **Item com maior valor total:**
{resumo_items['item_maior_valor_total']}

---

‚ùó Observa√ß√µes:
- Este √© um resumo dos dados completos, focado em estat√≠sticas relevantes.
- Utilize seu racioc√≠nio para interpretar nomes de colunas e dados relacionados.
- Relacione, quando necess√°rio, as duas tabelas com base em colunas comuns (ex: n√∫mero da nota, CNPJ, etc.).
- Caso o resumo n√£o seja suficiente para uma resposta precisa, avise o usu√°rio.

---

üí¨ Pergunta do usu√°rio:
{pergunta}

üéØ Regras para resposta:
- Escreva em portugu√™s.
- Seja direto e profissional.
- Destaque valores monet√°rios com separador de milhar e v√≠rgula decimal (ex: R$ 12.345,67).
- Se n√£o houver dados suficientes, diga claramente que n√£o √© poss√≠vel responder com precis√£o.
"""

        llm = get_llm(modelo, api_key, url)
        resposta = llm.invoke([HumanMessage(content=prompt)])
        return resposta.content

    except Exception as e:
        return f"‚ùå Erro no processamento: {str(e)}"
